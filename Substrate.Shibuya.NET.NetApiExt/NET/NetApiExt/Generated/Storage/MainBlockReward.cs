//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Substrate.Shibuya.NET.NetApiExt.Generated.Storage
{
    
    
    public sealed class BlockRewardStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        public BlockRewardStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("BlockReward", "RewardDistributionConfigStorage"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.Shibuya.NET.NetApiExt.Generated.Model.pallet_block_reward.RewardDistributionConfig)));
        }
        
        /// <summary>
        /// >> RewardDistributionConfigStorageParams
        /// </summary>
        public static string RewardDistributionConfigStorageParams()
        {
            return RequestGenerator.GetStorage("BlockReward", "RewardDistributionConfigStorage", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> RewardDistributionConfigStorageDefault
        /// Default value as hex string
        /// </summary>
        public static string RewardDistributionConfigStorageDefault()
        {
            return "0x02105E5F02CA9A3B02CA9A3B0284D7170000";
        }
        
        /// <summary>
        /// >> RewardDistributionConfigStorage
        /// </summary>
        public async Task<Substrate.Shibuya.NET.NetApiExt.Generated.Model.pallet_block_reward.RewardDistributionConfig> RewardDistributionConfigStorage(CancellationToken token)
        {
            string parameters = BlockRewardStorage.RewardDistributionConfigStorageParams();
            var result = await _client.GetStorageAsync<Substrate.Shibuya.NET.NetApiExt.Generated.Model.pallet_block_reward.RewardDistributionConfig>(parameters, token);
            return result;
        }
    }
    
    public sealed class BlockRewardCalls
    {
        
        /// <summary>
        /// >> set_configuration
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method SetConfiguration(Substrate.Shibuya.NET.NetApiExt.Generated.Model.pallet_block_reward.RewardDistributionConfig reward_distro_params)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(reward_distro_params.Encode());
            return new Method(35, "BlockReward", 0, "set_configuration", byteArray.ToArray());
        }
    }
    
    public sealed class BlockRewardConstants
    {
        
        /// <summary>
        /// >> RewardAmount
        ///  The amount of issuance for each block.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 RewardAmount()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U128();
            result.Create("0x0000BD71985D1C230000000000000000");
            return result;
        }
    }
    
    public enum BlockRewardErrors
    {
        
        /// <summary>
        /// >> InvalidDistributionConfiguration
        /// Sum of all rations must be one whole (100%)
        /// </summary>
        InvalidDistributionConfiguration,
    }
}
